apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "countermeasure.vilaverde.rocks/v1alpha1",
          "kind": "CounterMeasure",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "k8s-countermeasures",
              "app.kubernetes.io/instance": "countermeasure-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "countermeasure",
              "app.kubernetes.io/part-of": "k8s-countermeasures"
            },
            "name": "debug-action"
          },
          "spec": {
            "actions": [
              {
                "debug": {
                  "args": [
                    "/proc/1/root/iwashere.txt"
                  ],
                  "command": [
                    "touch"
                  ],
                  "image": "busybox:1.28",
                  "name": "debugger",
                  "podRef": {
                    "container": "main",
                    "name": "{{ .Data.pod }}",
                    "namespace": "{{ .Data.namespace }}"
                  },
                  "stdin": true
                },
                "name": "debug-pod"
              }
            ],
            "prometheus": {
              "alert": {
                "includePending": false,
                "name": "HTTP_404"
              },
              "service": {
                "name": "prometheus-operated",
                "namespace": "monitoring"
              }
            }
          }
        },
        {
          "apiVersion": "countermeasure.vilaverde.rocks/v1alpha1",
          "kind": "CounterMeasure",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "k8s-countermeasures",
              "app.kubernetes.io/instance": "countermeasure-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "countermeasure",
              "app.kubernetes.io/part-of": "k8s-countermeasures"
            },
            "name": "delete-action"
          },
          "spec": {
            "actions": [
              {
                "delete": {
                  "targetObjectRef": {
                    "apiVersion": "v1",
                    "kind": "Pod",
                    "name": "{{ .Data.pod }}",
                    "namespace": "{{ .Data.namespace }}"
                  }
                },
                "name": "delete-pod"
              }
            ],
            "prometheus": {
              "alert": {
                "includePending": false,
                "name": "HTTP_404"
              },
              "service": {
                "name": "prometheus-operated",
                "namespace": "monitoring"
              }
            }
          }
        },
        {
          "apiVersion": "countermeasure.vilaverde.rocks/v1alpha1",
          "kind": "CounterMeasure",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "k8s-countermeasures",
              "app.kubernetes.io/instance": "countermeasure-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "countermeasure",
              "app.kubernetes.io/part-of": "k8s-countermeasures"
            },
            "name": "json-patch-action"
          },
          "spec": {
            "actions": [
              {
                "name": "custom-restart-pod",
                "patch": {
                  "patchType": "application/json-patch+json",
                  "targetObjectRef": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "name": "monitored-app",
                    "namespace": "ns-custom"
                  },
                  "yamlTemplate": "- op: add\n  path: /spec/template/spec/containers/0/env/-\n  value: { \"name\": \"ENV.3\", \"value\": \"value3\" }\n"
                }
              }
            ],
            "prometheus": {
              "alert": {
                "includePending": false,
                "name": "HTTP_404"
              },
              "service": {
                "name": "prometheus-operated",
                "namespace": "monitoring"
              }
            }
          }
        },
        {
          "apiVersion": "countermeasure.vilaverde.rocks/v1alpha1",
          "kind": "CounterMeasure",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "k8s-countermeasures",
              "app.kubernetes.io/instance": "countermeasure-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "countermeasure",
              "app.kubernetes.io/part-of": "k8s-countermeasures"
            },
            "name": "patch-action"
          },
          "spec": {
            "actions": [
              {
                "name": "custom-restart-pod",
                "patch": {
                  "patchType": "application/merge-patch+json",
                  "targetObjectRef": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "name": "monitored-app",
                    "namespace": "ns-custom"
                  },
                  "yamlTemplate": "spec:\n  template:\n    metadata:\n      annotations:\n        countermeasure.vilaverde.rocks/restarted: \"true\"\n"
                }
              }
            ],
            "prometheus": {
              "alert": {
                "includePending": false,
                "name": "HTTP_404"
              },
              "service": {
                "name": "prometheus-operated",
                "namespace": "monitoring"
              }
            }
          }
        },
        {
          "apiVersion": "countermeasure.vilaverde.rocks/v1alpha1",
          "kind": "CounterMeasure",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "k8s-countermeasures",
              "app.kubernetes.io/instance": "countermeasure-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "countermeasure",
              "app.kubernetes.io/part-of": "k8s-countermeasures"
            },
            "name": "patch-strategic-action"
          },
          "spec": {
            "actions": [
              {
                "name": "change-env",
                "patch": {
                  "patchType": "application/strategic-merge-patch+json",
                  "targetObjectRef": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "name": "monitored-app",
                    "namespace": "ns-custom"
                  },
                  "yamlTemplate": "spec:\n  template:\n    spec: \n      containers:\n      - name: main\n        env:\n        - name: ENV.0\n          value: '{{ range (index .Object.spec.template.spec.containers 0).env }}{{- if eq .name \"ENV.1\" }}{{ .value }}{{- end -}}{{ end }}'\n        - name: ENV.1\n          value: '{{ range (index .Object.spec.template.spec.containers 0).env }}{{- if eq .name \"ENV.0\" }}{{ .value }}{{- end -}}{{ end }}'\n"
                }
              }
            ],
            "prometheus": {
              "alert": {
                "includePending": false,
                "name": "HTTP_404",
                "suppressionPolicy": {
                  "duration": "1m"
                }
              },
              "service": {
                "name": "prometheus-operated",
                "namespace": "monitoring"
              }
            }
          }
        },
        {
          "apiVersion": "countermeasure.vilaverde.rocks/v1alpha1",
          "kind": "CounterMeasure",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "k8s-countermeasures",
              "app.kubernetes.io/instance": "countermeasure-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "countermeasure",
              "app.kubernetes.io/part-of": "k8s-countermeasures"
            },
            "name": "restart-action"
          },
          "spec": {
            "actions": [
              {
                "name": "delete-pod",
                "restart": {
                  "deploymentRef": {
                    "name": "monitored-app",
                    "namespace": "ns-custom"
                  }
                }
              }
            ],
            "prometheus": {
              "alert": {
                "includePending": false,
                "name": "HTTP_404"
              },
              "service": {
                "name": "prometheus-operated",
                "namespace": "monitoring"
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2023-01-11T02:11:46Z"
    operators.operatorframework.io/builder: operator-sdk-v1.26.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: k8s-countermeasures.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: CounterMeasure is the Schema for the countermeasures API
      displayName: Counter Measure
      kind: CounterMeasure
      name: countermeasures.countermeasure.vilaverde.rocks
      version: v1alpha1
  description: Runbooks as code
  displayName: Kubernetes CounterMeasures
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - countermeasure.vilaverde.rocks
          resources:
          - countermeasures
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - countermeasure.vilaverde.rocks
          resources:
          - countermeasures/finalizers
          verbs:
          - update
        - apiGroups:
          - countermeasure.vilaverde.rocks
          resources:
          - countermeasures/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: k8s-countermeasures-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: k8s-countermeasures
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: k8s-countermeasures
          control-plane: controller-manager
        name: k8s-countermeasures-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: controller:latest
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: k8s-countermeasures-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: k8s-countermeasures-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - k8s
  - runbooks
  - countermeasures
  - devops
  - golang
  - prometheus
  links:
  - name: K8s Countermeasures
    url: https://k8s-countermeasures.domain
  maturity: alpha
  provider:
    name: vilaverde.rocks
    url: https://github.com/dvilaverde/k8s-countermeasures
  version: 0.0.1
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    conversionCRDs:
    - countermeasures.countermeasure.vilaverde.rocks
    deploymentName: k8s-countermeasures-controller-manager
    generateName: ccountermeasures.kb.io
    sideEffects: None
    targetPort: 9443
    type: ConversionWebhook
    webhookPath: /convert
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: k8s-countermeasures-controller-manager
    failurePolicy: Fail
    generateName: mcountermeasure.kb.io
    rules:
    - apiGroups:
      - countermeasure.vilaverde.rocks
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - countermeasures
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-countermeasure-vilaverde-rocks-v1alpha1-countermeasure
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: k8s-countermeasures-controller-manager
    failurePolicy: Fail
    generateName: vcountermeasure.kb.io
    rules:
    - apiGroups:
      - countermeasure.vilaverde.rocks
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - countermeasures
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-countermeasure-vilaverde-rocks-v1alpha1-countermeasure
