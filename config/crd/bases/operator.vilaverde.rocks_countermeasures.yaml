---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: countermeasures.operator.vilaverde.rocks
spec:
  group: operator.vilaverde.rocks
  names:
    kind: CounterMeasure
    listKind: CounterMeasureList
    plural: countermeasures
    shortNames:
    - ctm
    singular: countermeasure
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.dryRun
      name: Dry Run
      type: boolean
    - jsonPath: .status.lastStatus
      name: Status
      type: string
    - jsonPath: .status.lastStatusChangeTime
      name: Status Last Changed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CounterMeasure is the Schema for the countermeasures API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CounterMeasureSpec defines the desired state of CounterMeasure
            properties:
              actions:
                items:
                  description: Action defines an action to be taken when the trigger
                    detects a condition that needs attention.
                  properties:
                    debug:
                      description: The following specs are high level operations for
                        convenience.
                      properties:
                        args:
                          items:
                            type: string
                          type: array
                        command:
                          items:
                            type: string
                          type: array
                        image:
                          type: string
                        name:
                          type: string
                        podRef:
                          properties:
                            container:
                              description: '`container` is the name a container in
                                a pod.'
                              type: string
                            name:
                              description: '`name` is the name of the pod.'
                              type: string
                            namespace:
                              description: '`namespace` is the namespace of the pod.'
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        stdin:
                          type: boolean
                        tty:
                          type: boolean
                      required:
                      - image
                      - podRef
                      type: object
                    delete:
                      properties:
                        targetObjectRef:
                          properties:
                            apiVersion:
                              description: '`apiVersion` is the version of the object'
                              type: string
                            kind:
                              description: '`kind` is the type of object'
                              type: string
                            name:
                              description: '`name` is the name of the object.'
                              type: string
                            namespace:
                              description: '`namespace` is the namespace of the object.'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - namespace
                          type: object
                      required:
                      - targetObjectRef
                      type: object
                    name:
                      type: string
                    patch:
                      description: PatchSpec defines a patch operation on an existing
                        Custom Resource
                      properties:
                        patchType:
                          description: Similarly to above, these are constants to
                            support HTTP PATCH utilized by both the client and server
                            that didn't make sense for a whole package to be dedicated
                            to.
                          type: string
                        targetObjectRef:
                          properties:
                            apiVersion:
                              description: '`apiVersion` is the version of the object'
                              type: string
                            kind:
                              description: '`kind` is the type of object'
                              type: string
                            name:
                              description: '`name` is the name of the object.'
                              type: string
                            namespace:
                              description: '`namespace` is the namespace of the object.'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - namespace
                          type: object
                        yamlTemplate:
                          type: string
                      required:
                      - patchType
                      - targetObjectRef
                      - yamlTemplate
                      type: object
                    restart:
                      properties:
                        deploymentRef:
                          properties:
                            name:
                              description: '`name` is the name of the deployment.'
                              type: string
                            namespace:
                              description: '`namespace` is the namespace of the deployment.'
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                      required:
                      - deploymentRef
                      type: object
                  required:
                  - name
                  type: object
                type: array
              dryRun:
                default: false
                type: boolean
              prometheus:
                description: PrometheusSpec definition of a monitor for a prometheus
                  service in the K8s cluster
                properties:
                  alert:
                    description: PrometheusAlertSpec definition of a monitored prometheus
                      alert
                    properties:
                      includePending:
                        type: boolean
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  auth:
                    description: 'Defines a Kubernetes secret with a type indicating
                      the authentication scheme for example the type: ''kubernetes.io/basic-auth''
                      indicates basic auth credentials to prometheus.'
                    properties:
                      secretRef:
                        description: SecretReference represents a Secret Reference.
                          It has enough information to retrieve secret in any namespace
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - secretRef
                    type: object
                  service:
                    properties:
                      name:
                        description: '`name` is the name of the service.'
                        type: string
                      namespace:
                        description: '`namespace` is the namespace of the service.'
                        type: string
                      path:
                        description: '`path` is an optional URL path which will be
                          sent in any request to this service.'
                        type: string
                      port:
                        description: '`port` should be a valid port number (1-65535,
                          inclusive).'
                        format: int32
                        type: integer
                      targetPort:
                        description: '`targetPort` should be a valid name of a port
                          in the target service.'
                        type: string
                      useTls:
                        description: '`useTls` true if the HTTPS endpoint should be
                          used.'
                        type: boolean
                    required:
                    - name
                    - namespace
                    type: object
                required:
                - service
                type: object
            required:
            - actions
            type: object
          status:
            description: CounterMeasureStatus defines the observed state of CounterMeasure
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastStatus:
                type: string
              lastStatusChangeTime:
                format: date-time
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
