---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: prometheuses.eventsource.vilaverde.rocks
spec:
  group: eventsource.vilaverde.rocks
  names:
    kind: Prometheus
    listKind: PrometheusList
    plural: prometheuses
    shortNames:
    - pes
    singular: prometheus
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.pollingInterval
      name: Polling Interval
      type: integer
    - jsonPath: .spec.includePending
      name: Include Pending
      type: boolean
    - jsonPath: .status.state
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Prometheus is the Schema for the prometheuses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PrometheusSpec defines the desired state of Prometheus
            properties:
              auth:
                description: 'Defines a Kubernetes secret with a type indicating the
                  authentication scheme for example the type: ''kubernetes.io/basic-auth''
                  indicates basic auth credentials to prometheus.'
                properties:
                  secretRef:
                    description: SecretReference represents a Secret Reference. It
                      has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - secretRef
                type: object
              includePending:
                type: boolean
              pollingInterval:
                format: int32
                type: integer
              service:
                properties:
                  name:
                    description: '`name` is the name of the service.'
                    type: string
                  namespace:
                    description: '`namespace` is the namespace of the service.'
                    type: string
                  path:
                    description: '`path` is an optional URL path which will be sent
                      in any request to this service.'
                    type: string
                  port:
                    description: '`port` should be a valid port number (1-65535, inclusive).'
                    format: int32
                    type: integer
                  targetPort:
                    description: '`targetPort` should be a valid name of a port in
                      the target service.'
                    type: string
                  useTls:
                    description: '`useTls` true if the HTTPS endpoint should be used.'
                    type: boolean
                required:
                - name
                - namespace
                type: object
            required:
            - includePending
            - pollingInterval
            - service
            type: object
          status:
            description: PrometheusStatus defines the observed state of Prometheus
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
